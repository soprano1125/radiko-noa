#!/usr/bin/perl --

use strict;
use Net::Twitter::Lite::WithAPIv1_1;
use Config::Simple;
use File::Spec;
use LWP::UserAgent;
use XML::Simple;
use Encode;
use Unicode::Japanese;
use Time::Piece;
use Data::Dumper;

if(@ARGV != 1) {
	print "not found station_id\n";
	print "USAGE: " . __FILE__ . " station_id\n";
	exit -1;
}

my $station_id = $ARGV[0];

######################################################################
my ($ua, $res, $data);
my ($cache_dir, $file_name);
my ($param, $base_path, $setting_path, $setting_file);
$base_path = File::Spec->rel2abs();
$base_path =~ s/__FILE__//g;
$setting_path = "$base_path/config";
$setting_file = "$setting_path/$station_id.ini";

$param = new Config::Simple("$setting_file")->vars();
my $max_length	= 140;

$cache_dir = "$base_path/noa_cache";
$file_name = "$station_id.xml";

if(!-d $cache_dir){
	mkdir $cache_dir;
}

if(!-f "$cache_dir/$file_name"){
	open(FH, "> $cache_dir/$file_name") or die("cant open");
	print FH "";
	close(FH);
}

$ua = LWP::UserAgent->new();
$ua->agent("Mozilla/5.0 (radiko-man/0.1)");
$res = $ua->mirror("http://radiko.jp/v3/feed/pc/noa/$file_name", "$cache_dir/$file_name");
if (!$res->is_success) {
	exit 1;
}

$data = XML::Simple->new(keyattr => [])->XMLin("$cache_dir/$file_name");
my $noa = $data->{"noa"}->{"item"}[0];

my $t = Time::Piece->strptime($noa->{"stamp"}, '%Y-%m-%d %H:%M:%S');
my $noatime = sprintf("%04d/%02d/%02d %02d:%02d", $t->year, $t->mon, $t->mday, $t->hour, $t->minute);

my $str = encode('utf-8', "[$noatime] " . $noa->{"artist"} . " - " . $noa->{"title"});

# コンシューマ セット
my %INIT_PARAMS = (
    consumer_key    => $param->{"CONSUMER_PARAM.CONSUMER_KEY"},
    consumer_secret => $param->{"CONSUMER_PARAM.CONSUMER_SECRET"},
    ssl             => 1,
);

my $t = Net::Twitter::Lite::WithAPIv1_1->new(%INIT_PARAMS);

# トークンをセットする
$t->access_token($param->{"ACCESS_TOKEN.ACCESS_TOKEN"});
$t->access_token_secret($param->{"ACCESS_TOKEN.TOKEN_SECRET"});

binmode(STDOUT, ":utf8");

# 投稿
# delete strings
my $tweet = decode('utf-8', $str);
if(length($tweet) > $max_length) {
    $tweet = substr($tweet, 0, $max_length - 3) . "...";
}

# post to Twitter
my ($status, $ret);
eval {
	$status = $t->update({ status => $tweet });
};
if($@) {
	print "Tweet WARNING: $@\n";
	$ret = 1;

} else {
	print "Tweet posted.[$tweet]\n";
	$ret = 0;
}
exit $ret;

